# This workflow will gather the BioImage.IO resource collection from zenodo using node, then validate the collected
# resources and publish the validation summaries on the gh-pages branch

name: Validate BioImage.IO collection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron:  '0 1,13 * * *'

jobs:
  build-collection:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.17.3]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: Check for new RDF items and build the whole collection
      if: github.ref == 'refs/heads/main' # for main branch
      run: npm run build-overwrite
    - name: Create Pull Request
      if: github.ref == 'refs/heads/main' # for main branch
      id: cpr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.PAT }} # using a PAT will make sure we can trigger the CI in PR
        commit-message: Update RDF collection
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: rdf-item-patch
        delete-branch: true
        title: 'Update RDF collection'
        body: |
          There are changes to the RDF collection, please review the changes and resolve all the pending RDF items.
            - [ ] Passed the BioImage.IO Spec validator
            - [ ] Passed the BioImage.IO Core CI tests
            - [ ] The meta information for the RDF item is complete
              - [ ] The tags is complete and describes the model
              - [ ] Naming is intuitive and descriptive, example:  Multi-Organ Nucleus Segmentation (StarDist 2D)
              - [ ] Authors
              - [ ] Documentation is complete
                * For models, include an overview, describe how the model is trained, what is the training data, how to use the model, how to validate the results and list the references. TODO: Model documentation template.
            - [ ] All the `pending` items are resolved (either mark as `passed` or `skipped`)
            - [ ] Approved by at least one of the BioImage.IO admin team member
        labels: |
          RDF
          automated pr
        draft: false
    - name: Build the test collection with only new RDF items
      if: github.ref != 'refs/heads/main' # for the PR
      run: npm run build
    - name: "Upload npm output"
      uses: actions/upload-artifact@v2
      with:
        name: npm-dist
        path: dist
        retention-days: 1
    - name: Deploy to gh-pages ðŸš€
      if: github.ref == 'refs/heads/main' # for main branch
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages  # The branch the action should deploy to.
        folder: dist  # The folder the action should deploy.
#    - name: Check which resource types need validation
#      id: needs_validation
#      run: |
#        echo '::set-output name=model::'
# todo: check test-rdf.yaml for the resource types and set them as outputs of this job

  validate-bio-core-mix:
    needs: build-collection
    if: -n jobs.build-collection.needs_validation.model
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
        weights-format: [pytorch_state_dict, torchscript, tensorflow_saved_model_bundle, onnx]

    steps:
    - uses: actions/checkout@v2
    - name: install validation dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        mamba-version: "*"
        channel-priority: strict
        activate-environment: bio-spec
        environment-file: dev/environment-mix.yaml
        python-version: ${{ matrix.python-version }}
    - name: Download npm output (collection)
      uses: actions/download-artifact@v2
      with:
        name: npm-dist
        path: npm-dist
    - name: validate for py${{ matrix.python-version }} ${{ matrix.weights-format }}
      shell: bash -l {0}
      run: python scripts/generate_collection_test_summary.py npm-dist/test-rdf.yaml dist/py${{ matrix.python-version }}_${{ matrix.weights-format }}.yaml ${{ matrix.weights-format }}
    - name: "Upload validation summary"
      uses: actions/upload-artifact@v2
      with:
        name: bio-core-mix
        path: dist
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: [validate-bio-core-mix]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        path: artefacts
    - run: mkdir dist
    - run: mv artefacts/npm-dist/* dist/
    - run: rm -r artefacts/npm-dist
    - run: cp ./README.md ./dist/README.md
    - name: install summary postprocessing dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        mamba-version: "*"
        channel-priority: strict
        activate-environment: postpr
        environment-file: dev/environment-postpr-summaries.yaml
        python-version: 3.8
    - name: Postprocess validation test summaries
      shell: bash -l {0}
      run: python scripts/postprocess_test_summaries.py artefacts dist/summaries
    - name: Get branch name to deploy to
      id: get_branch
      shell: bash
      run: |
        if [[ -n '${{ github.event.pull_request.head.ref }}' ]]; then branch=gh-pages-${{ github.event.pull_request.head.ref }}; else branch=gh-pages; fi
        echo "::set-output name=branch::$branch"
    - name: Deploy to ${{ steps.get_branch.outputs.branch }} ðŸš€
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: ${{ steps.get_branch.outputs.branch }}  # The branch the action should deploy to.
        folder: dist  # The folder the action should deploy.
